Lambda Assignments

1.# Lambda function to add 15 to a given number
add_15 = lambda x: x + 15
print("Lambda function to add 15 to a given number:")
print(add_15(10)) # 25

# Lambda function to multiply two arguments
multiply = lambda x, y: x * y
print("\nLambda function to multiply two arguments:")
print(multiply(10, 20)) # 200



2)def second_lowest_mark(n):
    students = []
    for i in range(n):
        name = input("Name: ")
        grade = float(input("Grade: "))
        students.append([name, grade])

    second_lowest_mark = sorted(list(set([marks for name, marks in students])))[1]
    second_lowest_students = [name for name, marks in students if marks == second_lowest_mark]

    return second_lowest_mark, second_lowest_students

n = int(input("Input number of students: "))
second_lowest_mark, second_lowest_students = second_lowest_mark(n)

print("Second lowest grade:", second_lowest_mark)
print("Names:")
for name in second_lowest_students:
    print(name)



3)strings = ['hello', 'world', 'this', 'is', 'a', 'list', 'of', 'strings']

extract_strings = lambda strings, size: [s for s in strings if len(s) == size]

result = extract_strings(strings, 4)

print(result)

original_list = ['Python', 'list', 'exercises', 'practice', 'solution']
length = 8
result = [s for s in original_list if len(s) == length]
print(result)





4)from typing import Tuple
from statistics import mean

def average_tuple_of_tuples(tot: Tuple[Tuple[int]]) -> Tuple[float]:
    return tuple(map(lambda x: mean(x), tot))

original_tuple = ((10, 10, 10), (30, 45, 56), (81, 80, 39), (1, 2, 3))
print(average_tuple_of_tuples(original_tuple))
# Output: (30.5, 34.25, 27.0)

original_tuple = ((1, 1, -5), (30, -15, 56), (81, -60, -39), (-10, 2, 3))
print(average_tuple_of_tuples(original_tuple))
# Output: (25.5, -18.0, 3.75)

