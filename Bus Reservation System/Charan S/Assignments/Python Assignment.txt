1)
f=open("demofile.txt","r")
wordcount={}
for word in f.read().split():
    if word not in wordcount:
        wordcount[word] = 1
    else:
        wordcount[word] += 1
 
for k,v in wordcount.items():
    print(k, v)

2)
class Bus: 
   
     
def __init__(self, name, arrival_time, departure_time): 
      self.name = name 
      self.arrival_time = arrival_time 
      self.departure_time = departure_time 
  

def Compare(obj1, obj2): 
    if obj1.arrival_time == obj2.arrival_time: 
        return 0
    elif obj1.arrival_time < obj2.arrival_time: 
        return -1
    else: 
        return 1
  
def Sort(bus_list): 
    for i in range(len(bus_list)-1): 
        for j in range(0, len(bus_list)-i-1): 
            if Compare(bus_list[j], bus_list[j+1]) == 1: 
                bus_list[j], bus_list[j+1] = bus_list[j+1], bus_list[j] 
    return bus_list 
  
if __name__ == '__main__': 
    bus1 = Bus('Bus1', '5:00', '6:00') 
    bus2 = Bus('Bus2', '3:00', '4:00') 
    bus3 = Bus('Bus3', '8:00', '9:00') 
    bus4 = Bus('Bus4', '7:00', '8:00') 
  
    bus_list = [bus1, bus2, bus3, bus4] 
  
    sorted_bus_list = Sort(bus_list) 
  
    for bus in sorted_bus_list: 
        print(bus.name, bus.arrival_time, bus.departure_time)

3)
def count_words(filename): 
    with open(filename, 'r') as f: 
        word_list = f.read().split() 
        word_count = len(word_list) 
    print("Total number of words in the file :", word_count) 

filename = 'sample.txt'
count_words(filename)

4) 
import json

sampleJson = {"id" : 1, "name" : "value2", "age" : 29}

sorted_json = dict(sorted(sampleJson.items(), key=lambda x: x[0]))

with open("sorted_json.json", "w") as f:
    json.dump(sorted_json, f)

5)
vehicle_json = json.dumps(vehicle.__dict__)
print(vehicle_json)

Exceptions:

1)

class InvalidIDPasswordException(Exception):
    pass


try:
    input_id = input("Enter the ID:")
    input_pwd = input("Enter the password:")
    if len(input_pwd) < 8 or len(input_id) == 0:
        raise InvalidIDPasswordException
    else:
        print("ID and password accepted")
except InvalidIDPasswordException:
    print("Exception occured: Invalid ID or Password")
finally:
    print("bye")

2)

class InvalidDateException(Exception):
    pass


try:
    booked_date = input("Enter the booking date:")
    if booked_date not in ["2020-06-18","2020-06-19","2020-06-20","2020-06-21","2020-06-22"]:
        raise InvalidDateException
    else:
        print("Booking date is valid for tickets")
except InvalidDateException:
    print("Exception occured: Invalid Date")
finally:
    print("bye")

3)
class InvalidTicketAgeException (Exception):
    pass
try:
    age = int(input("Enter your age: "))
    if(age<3 or age>80):
        print("You can get free ticket")
    else:
        raise InvalidTicketAgeException
except InvalidTicketAgeException:
    print("Exception occured: Invalid Valid Age");
except ValueError:
  print("Please enter a valid age!")
finally:
    print("Thank you!")